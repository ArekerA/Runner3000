<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var offset_x = display_get_width()/25;
var offset_y = display_get_height()/25;
if(display_get_width() &gt; display_get_height())
{
    size = display_get_height()/6;
}
else
{
    size = display_get_width()/6;
}
alpha = 0;
rect_out = false;
rect_in = true;
x1 = display_get_width()/2 - 1.6*size/2;
x2 = offset_x;
x3 = display_get_width()-offset_x-size;
y1 = display_get_height()/2 - 1.6*size/2;
y2 = display_get_height()-offset_y-size;
y3 = display_get_height()-offset_y-size;

global.VK1 = virtual_key_add(x1, y1, 1.6*size, 1.6*size, vk_space);
global.VK2 = virtual_key_add(x2, y2, size, size, ord('X'));
global.VK3 = virtual_key_add(x3, y3, size, size, vk_escape);
scale = 0;
c = 0;
color[0] = c_white;
color[1] = c_aqua;
color[2] = c_lime;
color[3] = c_orange;
color[4] = c_red;
color[5] = c_teal;
color[6] = c_yellow;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>31</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>c = choose(0,1,2,3,4,5,6);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>31</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var s = size/80*(2+sin(scale)/5);
draw_sprite_ext(spr_logo, 0, view_wport[0]/2-(sprite_get_width(spr_logo)/2*s), 30, s, s, 0, color[c], 1);
scale += pi/45;
if(scale &gt; 2*pi)
{
    scale -= 2*pi;
}
draw_sprite_ext(spr_gui_start, 0, x1, y1, 1.6*size/48, 1.6*size/48, 0, -1, 1);
draw_sprite_ext(spr_gui_bonus, 0, x2, y2, size/48, size/48, 0, -1, 1);
draw_sprite_ext(spr_gui_exit, 0, x3, y3, size/48, size/48, 0, -1, 1);
if(keyboard_check_released(vk_space))
{
    rect_out = true;
    r = r_select_level;
    //r = r_test;
}
if(keyboard_check_released(vk_escape))
{
    game_end();
}
if(keyboard_check_released(ord('X')))
{
    rect_out = true;
    r = r_info;
}
if(rect_out)
{
    alpha -= 0.1
    draw_set_alpha(1-alpha);
    draw_set_color(c_black);
    draw_rectangle(0, 0, view_wport[0], view_hport[0], false);
    if(alpha &gt; 1)
    {
        room_goto(r);
    }
}
if(rect_in)
{
    alpha += 0.1
    draw_set_alpha(1-alpha);
    draw_set_color(c_black);
    draw_rectangle(0, 0, view_wport[0], view_hport[0], false);
    if(alpha &lt; 0)
    {
        rect_in = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
