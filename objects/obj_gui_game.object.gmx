<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var offset_x = display_get_width()/25;
var offset_y = display_get_height()/25;
if(display_get_width() &gt; display_get_height())
{
    size = display_get_height()/6;
}
else
{
    size = display_get_width()/6;
}
alpha = 0;
rect_out = false;
rect_in = true;
x1 = offset_x;
x2 = display_get_width()-offset_x-size;
y1 = display_get_height()-offset_y-size;
y2 = display_get_height()-offset_y-size;

global.VK1 = virtual_key_add(x1, y1, size, size, vk_space);
global.VK2 = virtual_key_add(x2, y2, size, size, ord('Z'));

switch (os_get_language())
{
   case "pl": ini_open("pl.ini"); break;
   default: ini_open("en.ini"); break;
}
string1 = ini_read_string("game", "distance", 0);
string2 = ini_read_string("game", "collected", 0);
ini_close();
global.coins = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_set_colour(c_white);
draw_set_font(global.font);
draw_set_halign(fa_left);
if(!global.dead)
{
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_text(10, 10, string1 + " " + string(floor(score/5)) + "m  " + string(global.global_coins) + "c");
    draw_sprite_ext(spr_gui_jump, 0, x1, y1, size/80, size/80, 0, -1, 1);
    draw_sprite_ext(spr_gui_shoot, 0, x2, y2, size/80, size/80, 0, -1, 1);
}
else
{
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(display_get_width()/2, display_get_height()/2-20, string1 + " " + string(floor(score/5)) + "m#" + string2 + " " + string(global.coins) + "c");
    draw_sprite_ext(spr_gui_restart, 0, display_get_width()/2-size*1.5, display_get_height()/2+60, size/80, size/80, 0, -1, 1);
    draw_sprite_ext(spr_gui_exit, 0, display_get_width()/2+size*0.5, display_get_height()/2+60, size/48, size/48, 0, -1, 1);
    global.VK3 = virtual_key_add(display_get_width()/2-size*1.5, display_get_height()/2+60, size, size, vk_enter);
    global.VK4 = virtual_key_add(display_get_width()/2+size*0.5, display_get_height()/2+60, size, size, vk_escape);
    virtual_key_delete(global.VK1);
    virtual_key_delete(global.VK2);
    if(keyboard_check_pressed(vk_enter))
    {
        room_restart();
    }
    if(keyboard_check_pressed(vk_escape))
    {
        rect_out = true;
    }
    if(rect_out)
    {
        alpha -= 0.1
        draw_set_alpha(1-alpha);
        draw_set_color(c_black);
        draw_rectangle(0, 0, view_wport[0], view_hport[0], false);
        if(alpha &gt; 1)
        {
            room_goto(r_menu);
        }
    }
    if(rect_in)
    {
        alpha += 0.1
        draw_set_alpha(1-alpha);
        draw_set_color(c_black);
        draw_rectangle(0, 0, view_wport[0], view_hport[0], false);
        if(alpha &lt; 0)
        {
            rect_in = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
